# This is a basic workflow to help you get started with Actions

name: Run arxiv-reader on Arxiv paper

# Controls when the workflow will run
on:
  workflow_dispatch:
    inputs:
      arxiv_id:
        description: 'Arxiv ID of the paper to run arxiv-reader on'
        required: true
        type: string
      remove_ranges:
        description: 'Remove range of lines from arxiv LaTeX source. See arxiv-reader/convert.py arguments.'
        required: false
        type: string
        default: '[]'

env:
  REGISTRY: ghcr.io
  # Can't use ${{ env.REGISTRY }} here, but would like to, so that we' don't
  # repeat ghcr.io.
  IMAGE_TAG: ghcr.io/${{ github.repository }}:sha-${{ github.sha }}

jobs:
  run:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read

    steps:
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run arxiv-reader
        run: |
          CONTAINER_NAME=run-$(date +%s)
          echo "Docker container name: $CONTAINER_NAME"
          docker run \
            --name $CONTAINER_NAME \
            --env OUTPUT_DIR=/root/results \
            ${{ env.IMAGE_TAG }}
            bash -c "cd arxiv-reader && python convert.py --arxiv_id ${{ github.event.inputs.arxiv_id }} --remove_ranges '${{ github.event.inputs.remove_ranges }}'"
          docker cp $CONTAINER_NAME:arxiv-reader/${{ github.event.inputs.arxiv_id }}.wav ${{ github.event.inputs.arxiv_id }}.wav
      - name: Upload arxiv-reader output
        uses: actions/upload-artifact@v3
        with:
          name: "${{ github.event.inputs.arxiv_id }}.wav"
          path: "${{ github.event.inputs.arxiv_id }}.wav"